# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tensorflow/contrib/decision_trees/proto/generic_tree_model_extensions.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from tensorflow.contrib.decision_trees.proto import generic_tree_model_pb2 as tensorflow_dot_contrib_dot_decision__trees_dot_proto_dot_generic__tree__model__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='tensorflow/contrib/decision_trees/proto/generic_tree_model_extensions.proto',
  package='tensorflow.decision_trees',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\nKtensorflow/contrib/decision_trees/proto/generic_tree_model_extensions.proto\x12\x19tensorflow.decision_trees\x1a@tensorflow/contrib/decision_trees/proto/generic_tree_model.proto\"\x90\x01\n\x12MatchingValuesTest\x12\x38\n\nfeature_id\x18\x01 \x01(\x0b\x32$.tensorflow.decision_trees.FeatureId\x12/\n\x05value\x18\x02 \x03(\x0b\x32 .tensorflow.decision_trees.Value\x12\x0f\n\x07inverse\x18\x03 \x01(\x08\"\x9b\x01\n\x0f\x43onstResultTest\x12\x38\n\nfeature_id\x18\x01 \x01(\x0b\x32$.tensorflow.decision_trees.FeatureId\x12\x39\n\x0fvalue_for_dtype\x18\x02 \x01(\x0b\x32 .tensorflow.decision_trees.Value\x12\x13\n\x0btest_result\x18\x03 \x01(\x08\x62\x06proto3')
  ,
  dependencies=[tensorflow_dot_contrib_dot_decision__trees_dot_proto_dot_generic__tree__model__pb2.DESCRIPTOR,])




_MATCHINGVALUESTEST = _descriptor.Descriptor(
  name='MatchingValuesTest',
  full_name='tensorflow.decision_trees.MatchingValuesTest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='feature_id', full_name='tensorflow.decision_trees.MatchingValuesTest.feature_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='tensorflow.decision_trees.MatchingValuesTest.value', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='inverse', full_name='tensorflow.decision_trees.MatchingValuesTest.inverse', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=173,
  serialized_end=317,
)


_CONSTRESULTTEST = _descriptor.Descriptor(
  name='ConstResultTest',
  full_name='tensorflow.decision_trees.ConstResultTest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='feature_id', full_name='tensorflow.decision_trees.ConstResultTest.feature_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value_for_dtype', full_name='tensorflow.decision_trees.ConstResultTest.value_for_dtype', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='test_result', full_name='tensorflow.decision_trees.ConstResultTest.test_result', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=320,
  serialized_end=475,
)

_MATCHINGVALUESTEST.fields_by_name['feature_id'].message_type = tensorflow_dot_contrib_dot_decision__trees_dot_proto_dot_generic__tree__model__pb2._FEATUREID
_MATCHINGVALUESTEST.fields_by_name['value'].message_type = tensorflow_dot_contrib_dot_decision__trees_dot_proto_dot_generic__tree__model__pb2._VALUE
_CONSTRESULTTEST.fields_by_name['feature_id'].message_type = tensorflow_dot_contrib_dot_decision__trees_dot_proto_dot_generic__tree__model__pb2._FEATUREID
_CONSTRESULTTEST.fields_by_name['value_for_dtype'].message_type = tensorflow_dot_contrib_dot_decision__trees_dot_proto_dot_generic__tree__model__pb2._VALUE
DESCRIPTOR.message_types_by_name['MatchingValuesTest'] = _MATCHINGVALUESTEST
DESCRIPTOR.message_types_by_name['ConstResultTest'] = _CONSTRESULTTEST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

MatchingValuesTest = _reflection.GeneratedProtocolMessageType('MatchingValuesTest', (_message.Message,), {
  'DESCRIPTOR' : _MATCHINGVALUESTEST,
  '__module__' : 'tensorflow.contrib.decision_trees.proto.generic_tree_model_extensions_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.decision_trees.MatchingValuesTest)
  })
_sym_db.RegisterMessage(MatchingValuesTest)

ConstResultTest = _reflection.GeneratedProtocolMessageType('ConstResultTest', (_message.Message,), {
  'DESCRIPTOR' : _CONSTRESULTTEST,
  '__module__' : 'tensorflow.contrib.decision_trees.proto.generic_tree_model_extensions_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.decision_trees.ConstResultTest)
  })
_sym_db.RegisterMessage(ConstResultTest)


# @@protoc_insertion_point(module_scope)
